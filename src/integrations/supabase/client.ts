
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://sjzbturfgadikgzokpyo.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNqemJ0dXJmZ2FkaWtnem9rcHlvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcxOTg4OTEsImV4cCI6MjA2Mjc3NDg5MX0.kK73WOJU9iCeSnGuHpcxIAWmxNGfQL8h7h6scXthF_I";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Create a script to create the super admin user
export const createSuperAdmin = async (password: string) => {
  const email = "super@edufar.co";

  try {
    // First check if user already exists
    const { data: existingUser } = await supabase
      .from('profiles')
      .select('*')
      .eq('email', email)
      .single();

    if (existingUser) {
      return { success: false, message: 'Super admin already exists' };
    }

    // Sign up the super admin user
    const { data: authData, error: authError } = await supabase.auth.signUp({
      email,
      password,
      options: {
        data: {
          first_name: 'Super',
          last_name: 'Admin',
        }
      }
    });

    if (authError) {
      throw authError;
    }

    // Update the user's role to super_admin
    if (authData.user) {
      const { error: updateError } = await supabase
        .from('profiles')
        .update({ role: 'super_admin', school_id: '00000000-0000-0000-0000-000000000001' })
        .eq('id', authData.user.id);

      if (updateError) {
        throw updateError;
      }

      return { success: true, message: 'Super admin created successfully' };
    }

    return { success: false, message: 'Failed to create super admin' };
    
  } catch (error: any) {
    return { success: false, message: error.message };
  }
};
